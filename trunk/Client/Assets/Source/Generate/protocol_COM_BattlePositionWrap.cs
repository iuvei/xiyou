//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class protocol_COM_BattlePositionWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(COM_BattlePosition), typeof(System.Object));
		L.RegFunction("Package", Package);
		L.RegFunction("Unpackage", Unpackage);
		L.RegFunction("New", _Createprotocol_COM_BattlePosition);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("InstanceId", get_InstanceId, set_InstanceId);
		L.RegVar("PosotionId", get_PosotionId, set_PosotionId);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _Createprotocol_COM_BattlePosition(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				COM_BattlePosition obj = new COM_BattlePosition();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: protocol.COM_BattlePosition.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Package(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			COM_BattlePosition obj = (COM_BattlePosition)ToLua.CheckObject(L, 1, typeof(COM_BattlePosition));
		    IWriter arg0 = (IWriter)ToLua.CheckObject(L, 2, typeof(IWriter));
			obj.Serialize(arg0);
			LuaDLL.lua_pushboolean(L, true);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Unpackage(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			COM_BattlePosition obj = (COM_BattlePosition)ToLua.CheckObject(L, 1, typeof(COM_BattlePosition));
			IReader arg0 = (IReader)ToLua.CheckObject(L, 2, typeof(IReader));
			bool o = obj.Deserialize(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_InstanceId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			COM_BattlePosition obj = (COM_BattlePosition)o;
			long ret = obj.InstId;
			LuaDLL.tolua_pushint64(L, ret);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index InstanceId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PosotionId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			COM_BattlePosition obj = (COM_BattlePosition)o;
            LuaDLL.lua_pushnumber(L, obj.Position);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PosotionId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_InstanceId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			COM_BattlePosition obj = (COM_BattlePosition)o;
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			obj.InstId = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index InstanceId on a nil value" : e.Message);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set_PosotionId(IntPtr L)
	{
		object o = null;

		try
		{
			o = ToLua.ToObject(L, 1);
			COM_BattlePosition obj = (COM_BattlePosition)o;
			sbyte arg0 = (sbyte)LuaDLL.luaL_checknumber(L, 2);
			obj.Position = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e, o == null ? "attempt to index PosotionId on a nil value" : e.Message);
		}
	}
}

