//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class DefineWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(Define), typeof(System.Object));
		L.RegFunction("LaunchUIBundle", LaunchUIBundle);
		L.RegFunction("Init", Init);
		L.RegFunction("GetInt", GetInt);
		L.RegFunction("GetFloat", GetFloat);
		L.RegFunction("GetStr", GetStr);
		L.RegFunction("Set", Set);
		L.RegFunction("New", _CreateDefine);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("PackageVersion", get_PackageVersion, null);
		L.RegVar("ASSET_EXT", get_ASSET_EXT, null);
		L.RegVar("TXT_EXT", get_TXT_EXT, null);
		L.RegVar("SCENE_MAIN", get_SCENE_MAIN, null);
		L.RegVar("SCENE_BATTLE", get_SCENE_BATTLE, null);
		L.RegVar("ANIMATION_PLAYER_ACTION_RUN", get_ANIMATION_PLAYER_ACTION_RUN, null);
		L.RegVar("ANIMATION_PLAYER_ACTION_IDLE", get_ANIMATION_PLAYER_ACTION_IDLE, null);
		L.RegVar("ANIMATION_PLAYER_ACTION_SHOW", get_ANIMATION_PLAYER_ACTION_SHOW, null);
		L.RegVar("ANIMATION_PLAYER_ACTION_BEATTACK", get_ANIMATION_PLAYER_ACTION_BEATTACK, null);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateDefine(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				Define obj = new Define();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: Define.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int LaunchUIBundle(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			Define.LaunchUIBundle(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 0);
			Define.Init();
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInt(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			int o = Define.GetInt(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetFloat(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			float o = Define.GetFloat(arg0);
			LuaDLL.lua_pushnumber(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetStr(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			string arg0 = ToLua.CheckString(L, 1);
			string o = Define.GetStr(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Set(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			string arg0 = ToLua.CheckString(L, 1);
			object arg1 = ToLua.ToVarObject(L, 2);
			Define.Set(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_PackageVersion(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Define.PackageVersion);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ASSET_EXT(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Define.ASSET_EXT);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_TXT_EXT(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Define.TXT_EXT);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SCENE_MAIN(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Define.SCENE_MAIN);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_SCENE_BATTLE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Define.SCENE_BATTLE);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ANIMATION_PLAYER_ACTION_RUN(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Define.ANIMATION_PLAYER_ACTION_RUN);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ANIMATION_PLAYER_ACTION_IDLE(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Define.ANIMATION_PLAYER_ACTION_IDLE);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ANIMATION_PLAYER_ACTION_SHOW(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Define.ANIMATION_PLAYER_ACTION_SHOW);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_ANIMATION_PLAYER_ACTION_BEATTACK(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, Define.ANIMATION_PLAYER_ACTION_BEATTACK);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

