//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class Battle_BattleStateWrap
{
	public static void Register(LuaState L)
	{
		L.BeginEnum(typeof(Battle.BattleState));
		L.RegVar("BS_Init", get_BS_Init, null);
		L.RegVar("BS_Oper", get_BS_Oper, null);
		L.RegVar("BS_Play", get_BS_Play, null);
		L.RegVar("BS_Result", get_BS_Result, null);
		L.RegVar("BS_Max", get_BS_Max, null);
		L.RegFunction("IntToEnum", IntToEnum);
		L.EndEnum();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BS_Init(IntPtr L)
	{
		ToLua.Push(L, Battle.BattleState.BS_Init);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BS_Oper(IntPtr L)
	{
		ToLua.Push(L, Battle.BattleState.BS_Oper);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BS_Play(IntPtr L)
	{
		ToLua.Push(L, Battle.BattleState.BS_Play);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BS_Result(IntPtr L)
	{
		ToLua.Push(L, Battle.BattleState.BS_Result);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get_BS_Max(IntPtr L)
	{
		ToLua.Push(L, Battle.BattleState.BS_Max);
		return 1;
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IntToEnum(IntPtr L)
	{
		int arg0 = (int)LuaDLL.lua_tonumber(L, 1);
		Battle.BattleState o = (Battle.BattleState)arg0;
		ToLua.Push(L, o);
		return 1;
	}
}

