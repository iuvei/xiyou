//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class GamePlayerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(GamePlayer), typeof(System.Object));
		L.RegFunction("Init", Init);
		L.RegFunction("GetCardByInstID", GetCardByInstID);
		L.RegFunction("GetGroupCards", GetGroupCards);
		L.RegFunction("IsMy", IsMy);
		L.RegFunction("IsMe", IsMe);
		L.RegFunction("IsInGroup", IsInGroup);
		L.RegFunction("GetResPathInMyCards", GetResPathInMyCards);
		L.RegFunction("GetResPath", GetResPath);
		L.RegFunction("GetResPathInMyGroup", GetResPathInMyGroup);
		L.RegFunction("GetUnitIDInMyCards", GetUnitIDInMyCards);
		L.RegFunction("GetInstIDInMyCards", GetInstIDInMyCards);
		L.RegFunction("GetInstIDInMyGroup", GetInstIDInMyGroup);
		L.RegFunction("PutInCard", PutInCard);
		L.RegFunction("TakeOffCard", TakeOffCard);
		L.RegFunction("DeleteGroup", DeleteGroup);
		L.RegFunction("New", _CreateGamePlayer);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.RegVar("_InstID", get__InstID, set__InstID);
		L.RegVar("_Name", get__Name, set__Name);
		L.RegVar("_IsAuto", get__IsAuto, set__IsAuto);
		L.RegVar("_Data", get__Data, set__Data);
		L.RegVar("_Cards", get__Cards, set__Cards);
		L.RegVar("_CardGroup", get__CardGroup, set__CardGroup);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int _CreateGamePlayer(IntPtr L)
	{
		try
		{
			int count = LuaDLL.lua_gettop(L);

			if (count == 0)
			{
				GamePlayer obj = new GamePlayer();
				ToLua.PushObject(L, obj);
				return 1;
			}
			else
			{
				return LuaDLL.luaL_throw(L, "invalid arguments to ctor method: GamePlayer.New");
			}
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int Init(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			COM_Player arg0 = (COM_Player)ToLua.CheckObject(L, 1, typeof(COM_Player));
			GamePlayer.Init(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetCardByInstID(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			long arg0 = LuaDLL.tolua_checkint64(L, 1);
			COM_Unit o = GamePlayer.GetCardByInstID(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetGroupCards(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			System.Collections.Generic.List<COM_Unit> o = GamePlayer.GetGroupCards(arg0);
			ToLua.PushObject(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsMy(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			long arg0 = LuaDLL.tolua_checkint64(L, 1);
			bool o = GamePlayer.IsMy(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsMe(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			long arg0 = LuaDLL.tolua_checkint64(L, 1);
			bool o = GamePlayer.IsMe(arg0);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int IsInGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			long arg0 = LuaDLL.tolua_checkint64(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			bool o = GamePlayer.IsInGroup(arg0, arg1);
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResPathInMyCards(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			string o = GamePlayer.GetResPathInMyCards(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResPath(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			long arg0 = LuaDLL.tolua_checkint64(L, 1);
			string o = GamePlayer.GetResPath(arg0);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetResPathInMyGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			string o = GamePlayer.GetResPathInMyGroup(arg0, arg1);
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetUnitIDInMyCards(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int o = GamePlayer.GetUnitIDInMyCards(arg0);
			LuaDLL.lua_pushinteger(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInstIDInMyCards(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			long o = GamePlayer.GetInstIDInMyCards(arg0);
			LuaDLL.tolua_pushint64(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetInstIDInMyGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			long o = GamePlayer.GetInstIDInMyGroup(arg0, arg1);
			LuaDLL.tolua_pushint64(L, o);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int PutInCard(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			long arg0 = LuaDLL.tolua_checkint64(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			GamePlayer.PutInCard(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int TakeOffCard(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			long arg0 = LuaDLL.tolua_checkint64(L, 1);
			int arg1 = (int)LuaDLL.luaL_checknumber(L, 2);
			GamePlayer.TakeOffCard(arg0, arg1);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int DeleteGroup(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			int arg0 = (int)LuaDLL.luaL_checknumber(L, 1);
			GamePlayer.DeleteGroup(arg0);
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__InstID(IntPtr L)
	{
		try
		{
			LuaDLL.tolua_pushint64(L, GamePlayer._InstID);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__Name(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushstring(L, GamePlayer._Name);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__IsAuto(IntPtr L)
	{
		try
		{
			LuaDLL.lua_pushboolean(L, GamePlayer._IsAuto);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__Data(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, GamePlayer._Data);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__Cards(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, GamePlayer._Cards);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int get__CardGroup(IntPtr L)
	{
		try
		{
			ToLua.PushObject(L, GamePlayer._CardGroup);
			return 1;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__InstID(IntPtr L)
	{
		try
		{
			long arg0 = LuaDLL.tolua_checkint64(L, 2);
			GamePlayer._InstID = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__Name(IntPtr L)
	{
		try
		{
			string arg0 = ToLua.CheckString(L, 2);
			GamePlayer._Name = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__IsAuto(IntPtr L)
	{
		try
		{
			bool arg0 = LuaDLL.luaL_checkboolean(L, 2);
			GamePlayer._IsAuto = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__Data(IntPtr L)
	{
		try
		{
			COM_Unit arg0 = (COM_Unit)ToLua.CheckObject(L, 2, typeof(COM_Unit));
			GamePlayer._Data = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__Cards(IntPtr L)
	{
		try
		{
			System.Collections.Generic.List<COM_Unit> arg0 = (System.Collections.Generic.List<COM_Unit>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<COM_Unit>));
			GamePlayer._Cards = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int set__CardGroup(IntPtr L)
	{
		try
		{
			System.Collections.Generic.List<System.Collections.Generic.List<COM_Unit>> arg0 = (System.Collections.Generic.List<System.Collections.Generic.List<COM_Unit>>)ToLua.CheckObject(L, 2, typeof(System.Collections.Generic.List<System.Collections.Generic.List<COM_Unit>>));
			GamePlayer._CardGroup = arg0;
			return 0;
		}
		catch(Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

